<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.industry.mapper.TalentMapper">

    <insert id="save" parameterType="TalentDO" useGeneratedKeys="true" keyProperty="id">
        insert into construction_industry_api.t_talent
        (full_name, sex, area, social_security, telephone_number, qq_number, education, title, tender_exit,
         class_three_personnel, issue_cert_time, continuing_education_date, certificate_status, talent_status,
         talent_price, talent_price_number, number_unit, creator_id, gmt_create, regenerator_id, gmt_modified, remark)
        values ( #{fullName}
               , #{sex}
               , #{area}
               , #{socialSecurity}
               , #{telephoneNumber}
               , #{qqNumber}
               , #{education}
               , #{title}
               , #{tenderExit}
               , #{classThreePersonnel}
               , #{issueCertTime}
               , #{continuingEducationDate}
               , #{certificateStatus}
               , #{talentStatus}
               , #{talentPrice}
               , #{talentPriceNumber}
               , #{numberUnit}
               , #{creatorId}
               , #{gmtCreate}
               , #{regeneratorId}
               , #{gmtModified}
               , #{remark})
    </insert>
    <update id="updateTalentStatusBatch">
        update construction_industry_api.t_talent
        set talent_status = 2
        where id in
        <foreach collection="listTalentIds" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </update>
    <update id="updateDeleteStatusById">
        update construction_industry_api.t_talent
        set is_deleted = #{deleted}
        where id = #{id}
    </update>
    <update id="updateTalentStatusById">
        update construction_industry_api.t_talent
        set talent_status = #{status}
        where id = #{id}
    </update>

    <resultMap id="certificateMap" type="TalentCertificateDO">
        <id column="id2" property="id"/>
        <result column="issue_cert_time2" property="issueCertTime"/>
        <result column="continuing_education_date2" property="continuingEducationDate"/>
        <result column="creator_id2" property="creatorId"/>
        <result column="gmt_create2" property="gmtCreate"/>
        <result column="regenerator_id2" property="regeneratorId"/>
        <result column="gmt_modified2" property="gmtModified"/>
    </resultMap>

    <resultMap id="talentMap" type="TalentDO">
        <id column="id" property="id"/>
        <collection property="listCertificates" ofType="TalentCertificateDO" resultMap="certificateMap"/>
    </resultMap>

    <resultMap id="talentMap2" type="TalentDO">
        <id column="id" property="id"/>
        <collection
                property="listCertificates"
                ofType="TalentCertificateDO"
                select="selectSubList"
                column="id"/>
    </resultMap>

    <select id="selectSubList" resultType="TalentCertificateDO">
        select id,
               talent_id,
               remark,
               level_major,
               initial_conversion,
               issue_cert_time,
               continuing_education_date,
               creator_id,
               gmt_create,
               regenerator_id,
               gmt_modified
        from construction_industry_api.t_talent_certificate
        where talent_id = #{id}
    </select>

    <select id="queryList" resultMap="talentMap2" resultType="TalentDO">
        select t1.id,
               t1.full_name,
               t1.sex,
               t1.area,
               t1.social_security,
               t1.telephone_number,
               t1.qq_number,
               t1.education,
               t1.title,
               t1.tender_exit,
               t1.class_three_personnel,
               t1.issue_cert_time,
               t1.continuing_education_date,
               t1.certificate_status,
               t1.talent_status,
               t1.talent_price,
               t1.talent_price_number,
               t1.number_unit,
               t1.creator_id,
               t1.gmt_create,
               t1.regenerator_id,
               t1.gmt_modified,
               t1.remark
        from construction_industry_api.t_talent as t1
        order by t1.id desc
    </select>

    <select id="queryById" resultMap="talentMap" resultType="TalentDO">
        select t1.id,
               t1.full_name,
               t1.sex,
               t1.area,
               t1.social_security,
               t1.telephone_number,
               t1.qq_number,
               t1.education,
               t1.title,
               t1.tender_exit,
               t1.class_three_personnel,
               t1.issue_cert_time,
               t1.continuing_education_date,
               t1.certificate_status,
               t1.talent_status,
               t1.talent_price,
               t1.talent_price_number,
               t1.number_unit,
               t1.creator_id,
               t1.gmt_create,
               t1.regenerator_id,
               t1.gmt_modified,
               t1.remark,
               t2.id                        as id2,
               t2.talent_id,
               t2.level_major,
               t2.initial_conversion,
               t2.issue_cert_time           as issue_cert_time2,
               t2.continuing_education_date as continuing_education_date2,
               t2.creator_id                as creator_id2,
               t2.gmt_create                as gmt_create2,
               t2.regenerator_id            as regenerator_id2,
               t2.gmt_modified              as gmt_modified2
        from construction_industry_api.t_talent t1
                 left join
             construction_industry_api.t_talent_certificate t2
             on t1.id = t2.talent_id
        where t1.id = #{id}
        order by t1.id desc
    </select>
    <select id="getCountByCondition" resultType="Long">
        select count(*)
        from construction_industry_api.t_talent
        where 1 = 1
        <bind name="talent.fullName" value="talent.fullName"/>
        <if test="talent.fullName != null and talent.fullName != ''">
            and full_name like concat('%',#{talent.fullName},'%')
        </if>
        <if test="talent.levelMajor != null or talent.levelMajor != '' or talent.initialConversion != null">
            and id in (
            select distinct (talent_id)
            from construction_industry_api.t_talent_certificate
            <bind name="talent.levelMajor" value="talent.levelMajor"/>
            where 1 = 1
            <if test="talent.levelMajor != null and talent.levelMajor != ''">
                and json_contains(level_major, json_array(#{talent.levelMajor}))
            </if>
            <bind name="talent.initialConversion" value="talent.initialConversion"/>
            <if test="talent.initialConversion != null">
                and initial_conversion = #{talent.initialConversion}
            </if>)
        </if>
        <bind name="talent.area" value="talent.area"/>
        <if test="talent.area != null and talent.area.size() > 0">
            and area in(
            <foreach collection="talent.area" item="item" separator=",">
                #{item}
            </foreach>)
        </if>
        <bind name="talent.socialSecurity" value="talent.socialSecurity"/>
        <if test="talent.socialSecurity != null and talent.socialSecurity.size() > 0">
            and social_security in(
            <foreach collection="talent.socialSecurity" item="item" separator=",">
                #{item}
            </foreach>)
        </if>
        <bind name="talent.title" value="talent.title"/>
        <if test="talent.title != null">
            and title = #{talent.title}
        </if>
        <bind name="talent.classThreePersonnel" value="talent.classThreePersonnel"/>
        <if test="talent.classThreePersonnel != null">
            and class_three_personnel = #{talent.classThreePersonnel}
        </if>
        <bind name="talent.tenderExit" value="talent.tenderExit"/>
        <if test="talent.tenderExit != null">
            and tender_exit = #{talent.tenderExit}
        </if>
        <bind name="talent.talentStatus" value="talent.talentStatus"/>
        <if test="talent.talentStatus != null">
            and talent_status = #{talent.talentStatus}
        </if>
        <bind name="talent.creatorId" value="talent.creatorId"/>
        <if test="talent.creatorId != null">
            and creator_id = #{talent.creatorId}
        </if>
        <bind name="talent.startDate" value="talent.startDate"/>
        <if test="talent.startDate != null and talent.startDate != ''">
            and gmt_create &gt;= #{talent.startDate}
        </if>
        <bind name="talent.endDate" value="talent.endDate"/>
        <if test="talent.endDate != null and talent.endDate != ''">
            and gmt_create &lt;= #{talent.endDate}
        </if>
        <bind name="talent.deleted" value="talent.deleted"/>
        <if test="talent.deleted != null">
            and is_deleted = #{talent.deleted}
        </if>
    </select>
    <select id="listTalents" resultType="TalentDO" resultMap="talentMap2">
        select id,
        full_name,
        sex,
        area,
        social_security,
        telephone_number,
        qq_number,
        education,
        title,
        tender_exit,
        class_three_personnel,
        issue_cert_time,
        continuing_education_date,
        certificate_status,
        talent_status,
        talent_price,
        talent_price_number,
        number_unit,
        creator_id,
        gmt_create,
        regenerator_id,
        gmt_modified,
        remark
        from construction_industry_api.t_talent
        where 1 = 1
        <bind name="talent.fullName" value="talent.fullName"/>
        <if test="talent.fullName != null and talent.fullName != ''">
            and full_name like concat('%',#{talent.fullName},'%')
        </if>
        <if test="talent.levelMajor != null or talent.levelMajor != '' or talent.initialConversion != null">
            and id in (
            select distinct (talent_id)
            from construction_industry_api.t_talent_certificate
            <bind name="talent.levelMajor" value="talent.levelMajor"/>
            where 1 = 1
            <if test="talent.levelMajor != null and talent.levelMajor != ''">
                and json_contains(level_major, json_array(#{talent.levelMajor}))
            </if>
            <bind name="talent.initialConversion" value="talent.initialConversion"/>
            <if test="talent.initialConversion != null">
                and initial_conversion = #{talent.initialConversion}
            </if>)
        </if>
        <bind name="talent.area" value="talent.area"/>
        <if test="talent.area != null and talent.area.size() > 0">
            and area in(
            <foreach collection="talent.area" item="item" separator=",">
                #{item}
            </foreach>)
        </if>
        <bind name="talent.socialSecurity" value="talent.socialSecurity"/>
        <if test="talent.socialSecurity != null and talent.socialSecurity.size() > 0">
            and social_security in(
            <foreach collection="talent.socialSecurity" item="item" separator=",">
                #{item}
            </foreach>)
        </if>
        <bind name="talent.title" value="talent.title"/>
        <if test="talent.title != null">
            and title = #{talent.title}
        </if>
        <bind name="talent.classThreePersonnel" value="talent.classThreePersonnel"/>
        <if test="talent.classThreePersonnel != null">
            and class_three_personnel = #{talent.classThreePersonnel}
        </if>
        <bind name="talent.tenderExit" value="talent.tenderExit"/>
        <if test="talent.tenderExit != null">
            and tender_exit = #{talent.tenderExit}
        </if>
        <bind name="talent.talentStatus" value="talent.talentStatus"/>
        <if test="talent.talentStatus != null">
            and talent_status = #{talent.talentStatus}
        </if>
        <bind name="talent.creatorId" value="talent.creatorId"/>
        <if test="talent.creatorId != null">
            and creator_id = #{talent.creatorId}
        </if>
        <bind name="talent.startDate" value="talent.startDate"/>
        <if test="talent.startDate != null and talent.startDate != ''">
            and gmt_create &gt;= #{talent.startDate}
        </if>
        <bind name="talent.endDate" value="talent.endDate"/>
        <if test="talent.endDate != null and talent.endDate != ''">
            and gmt_create &lt;= #{talent.endDate}
        </if>
        <bind name="talent.deleted" value="talent.deleted"/>
        <if test="talent.deleted != null">
            and is_deleted = #{talent.deleted}
        </if>
        order by id desc
        limit #{page.currentPage},#{page.pageSize}
    </select>

    <resultMap id="getAlternativeTalentsMap" type="TalentDO">
        <id column="id" property="id"/>
        <collection property="listCertificates" ofType="TalentCertificateDO" select="selectListCertificatesById"
                    column="id"/>
    </resultMap>

    <select id="selectListCertificatesById" resultType="TalentCertificateDO">
        select id,
               talent_id,
               remark,
               level_major,
               initial_conversion,
               issue_cert_time,
               continuing_education_date,
               creator_id,
               gmt_create,
               regenerator_id,
               gmt_modified
        from construction_industry_api.t_talent_certificate
        where talent_id = #{id}
    </select>

    <select id="getAlternativeTalents" resultType="TalentDO" resultMap="getAlternativeTalentsMap">
        select id, full_name, sex, area, social_security, telephone_number, qq_number, education, title, tender_exit,
        class_three_personnel, issue_cert_time, continuing_education_date, certificate_status, talent_status,
        talent_price, talent_price_number, number_unit, creator_id, gmt_create, regenerator_id, gmt_modified, remark
        from construction_industry_api.t_talent
        where id in (
        select distinct (talent_id)
        from construction_industry_api.t_talent_certificate
        where
        <if test="search.levelMajorInitialConversion != null and search.levelMajorInitialConversion.size() > 0">
            <foreach collection="search.levelMajorInitialConversion" item="item" separator="or">
                (json_contains(level_major, #{item.levelMajor}) and initial_conversion = #{item.initialConversion})
            </foreach>
        </if>
        )
        <if test="search.tenderExit != null">
            and tender_exit = #{search.tenderExit}
        </if>
        and talent_status = 1
        order by id desc
        limit #{page.currentPage},#{page.pageSize}
    </select>
    <select id="getAlternativeTalentsCount" resultType="Long">
        select count(*)
        from construction_industry_api.t_talent
        where id in (
        select distinct (talent_id)
        from construction_industry_api.t_talent_certificate
        where
        <if test="search.levelMajorInitialConversion != null and search.levelMajorInitialConversion.size() > 0">
            <foreach collection="search.levelMajorInitialConversion" item="item" separator="or">
                (json_contains(level_major, #{item.levelMajor}) and initial_conversion = #{item.initialConversion})
            </foreach>
        </if>
        )
        <if test="search.tenderExit != null">
            and tender_exit = #{search.tenderExit}
        </if>
        and talent_status = 1
    </select>
    <select id="getOrderedTalentIds" resultType="String">
        select full_name from construction_industry_api.t_talent where id in (
        <foreach collection="listTalentIds" separator="," item="item">
            #{item}
        </foreach>
        ) and talent_status != 1
    </select>
    <select id="getCanOrderTalentIds" resultType="Integer">
        select id
        from construction_industry_api.t_talent
        where talent_status = 1
    </select>
    <select id="getTalentsByCondition2" resultType="TalentDO" resultMap="talentMap2">
        select id, full_name, sex, area, social_security, telephone_number, qq_number, education, title, tender_exit,
        class_three_personnel, issue_cert_time, continuing_education_date, certificate_status, talent_status,
        talent_price, talent_price_number, number_unit, creator_id, gmt_create, regenerator_id, gmt_modified, remark
        from construction_industry_api.t_talent
        where talent_status = 1
        <bind name="search.fullName" value="search.fullName"/>
        <if test="search.fullName != null and search.fullName != ''">
            and full_name like concat('%',#{search.fullName},'%')
        </if>
        <bind name="search.levelMajor" value="search.levelMajor"/>
        <if test="search.levelMajor != null and search.levelMajor != ''">
            and id in (
            select distinct (talent_id)
            from construction_industry_api.t_talent_certificate
            where json_contains(level_major, json_array(#{search.levelMajor}))
            )
        </if>
        <bind name="search.tenderExit" value="search.tenderExit"/>
        <if test="search.tenderExit != null">
            and tender_exit = #{search.tenderExit}
        </if>
        <bind name="search.listSelectedIds" value="search.listSelectedIds"/>
        <if test="search.listSelectedIds != null and search.listSelectedIds.size() > 0">
            and id not in(
            <foreach collection="search.listSelectedIds" item="item" separator=",">
                #{item}
            </foreach>)
        </if>
        order by id desc
        limit #{page.currentPage},#{page.pageSize}
    </select>
    <select id="getTalentsCountByCondition2" resultType="Long">
        select count(*)
        from construction_industry_api.t_talent
        where talent_status = 1
        <bind name="search.fullName" value="search.fullName"/>
        <if test="search.fullName != null and search.fullName != ''">
            and full_name like concat('%',#{search.fullName},'%')
        </if>
        <bind name="search.levelMajor" value="search.levelMajor"/>
        <if test="search.levelMajor != null and search.levelMajor != ''">
            and id in (
            select distinct (talent_id)
            from construction_industry_api.t_talent_certificate
            where json_contains(level_major, json_array(#{search.levelMajor}))
            )
        </if>
        <bind name="search.tenderExit" value="search.tenderExit"/>
        <if test="search.tenderExit != null">
            and tender_exit = #{search.tenderExit}
        </if>
        <bind name="search.listSelectedIds" value="search.listSelectedIds"/>
        <if test="search.listSelectedIds != null and search.listSelectedIds.size() > 0">
            and id not in(
            <foreach collection="search.listSelectedIds" item="item" separator=",">
                #{item}
            </foreach>)
        </if>
    </select>
</mapper>
